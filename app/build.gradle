apply plugin: 'com.android.application'


android {
    signingConfigs {
        release {
            storeFile file('android.keystore')
            storePassword '123456'
            keyPassword '123456'
            keyAlias = 'android.keystore'
        }
        debug {
            storeFile file('android.keystore')
            storePassword '123456'
            keyPassword '123456'
            keyAlias = 'android.keystore'
        }
    }

    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion
    defaultConfig {
        applicationId "com.zhongjh.cameraapp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true // 添加多密度矢量图形
        ndk {
            // 设置支持的SO库架构
            abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
        }
    }

    lintOptions {
        disable 'GoogleAppIndexingWarning'
        baseline file("lint-baseline.xml")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    // 基本库
    implementation "androidx.core:core-ktx:$rootProject.ext.ktx_version"
    implementation "androidx.recyclerview:recyclerview:$rootProject.ext.recyclerviewSdkVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.ext.appcompatSdkVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintlayoutSdkVersion"
    implementation "androidx.documentfile:documentfile:$rootProject.ext.documentfileSdkVersion"
    def camerax_version = "1.2.1"
    implementation "androidx.camera:camera-core:${camerax_version}"

    // 如果想简化代码并且同时用到multilibrary和grid、albumCameraRecorderCommon,可以直接使用combined库
    implementation project(':combined')
    // 如果只想使用multilibrary，就单独引用multilibrary和albumCameraRecorderCommon
    //implementation project(path: ':multilibrary')
    //implementation project(path: ':grid')
    //implementation project(':albumCameraRecorderCommon')
    implementation project(path: ':imageedit')
    implementation project(path: ':videoedit')
    implementation 'com.github.zhongjhATC:Retrofit2Rxjava2Download:1.0.5'
    implementation "com.google.android.material:material:$rootProject.ext.androidMaterialSdkVersion"

    // 图片
    implementation 'com.github.bumptech.glide:glide:4.15.1'

    // 捕获异常
    implementation 'com.tencent.bugly:crashreport:latest.release'
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    // 检测内存泄漏 http://www.liaohuqiu.net/cn/posts/leak-canary-read-me/ https://github.com/square/leakcanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:3.0-alpha-8'

    implementation 'androidx.multidex:multidex:2.0.1'

    // luban压缩图片
    implementation 'com.github.Curzibn:Luban:1.1.8'
    // https://github.com/zetbaitsu/Compressor 另一款压缩库
    implementation 'id.zelory:compressor:2.1.1'

    // 异常捕获 https://github.com/Ereza/CustomActivityOnCrash
    api 'cat.ereza:customactivityoncrash:2.3.0'

    // 显示fps https://github.com/SilenceDut/fpsviewer
    debugImplementation "com.github.silencedut.fpsviewer:fpsviewer:0.8.2"
    releaseImplementation "com.github.silencedut.fpsviewer:fpsviewer-no-op:0.8.2"


}
